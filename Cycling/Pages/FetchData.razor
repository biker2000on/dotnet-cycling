@page "/fetchdata"
@using Cycling.Data
@inject WeatherForecastService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid Data="@forecasts" TItem="WeatherForecast" AllowSorting="true" AllowMultiColumnSorting="true">
        <Columns>
            <RadzenDataGridColumn TItem="WeatherForecast" Property="Date.ToShortDateString()" Title="Date" />
            <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureC" Title="Temp (C)" />
            <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureF" Title="Temp (F)" />
            <RadzenDataGridColumn TItem="WeatherForecast" Property="Summary" Title="Summary" />
        </Columns>
    </RadzenDataGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }
}
